<item>
   <title>Issue #149 created</title>
   <pubDate>2022-09-20T20:12:28Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/149</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-149</guid>
   <description>&lt;div&gt;&lt;p&gt;Functions for splitting a sequence (or array) based on predicate matching &lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;This is concerned with use cases like "How do I select all the paragraphs before the first H2?" or "How do I select items between &lt;start-milestone/&gt; and &lt;end-milestone/&gt;?".&lt;/p&gt;
&lt;p&gt;Currently in the draft spec we have proposals for:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;range-from($input, $predicate)&lt;/code&gt;: Returns a sequence containing items from an input sequence, starting with the first item that matches a supplied predicate.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;range-to($input, $predicate)&lt;/code&gt;: Returns a sequence containing items from an input sequence, ending with the first item that matches a supplied predicate.&lt;/p&gt;
&lt;p&gt;These both include the matching item, on the theory that it's easier to drop it if it's not wanted, than to add it if its needed.&lt;/p&gt;
&lt;p&gt;I've also proposed (as an alternative) a family of four functions &lt;code&gt;items-before&lt;/code&gt;, &lt;code&gt;items-to&lt;/code&gt;, &lt;code&gt;items-from&lt;/code&gt;, &lt;code&gt;items-after&lt;/code&gt; giving four combinations of taking the subsequence before/after the first match of the predicate, and including or not including the matched item.&lt;/p&gt;
&lt;p&gt;It's worth pointing out that these can all be defined in terms of index-where. For example range-to (assuming at least one item matches the predicate) is subsequence($input, 1, index-where($input, $predicate).&lt;/p&gt;
&lt;p&gt;These functions all treat the first match of the predicate as special: they partition the sequence before or after the first item that matches the predicate. An alternative, inspilred by XSLT's for-each-group group-ending|starting-with, would be to partition the sequence breaking immediately before or after every item that matches the predicate:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;group-breaking-after($input, $predicate)
group-breaking-before($input, $predicate)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But these logically return a sequence of sequences, which would typically be presented either as an array of sequences or a sequence of arrays, neither of which is ideal. (An alternative would be to return a sequence of arity-0 functions)&lt;/p&gt;
&lt;p&gt;Having reviewed the options, I think my preferance remains having a family of four functions which I have called  items-before, items-to, items-from, items-after. But I'm certainly open to other options. The logical names would probably be subsequence-before etc, but that's a bit of a mouthful.&lt;/p&gt;
&lt;p&gt;Whatever family of functions we decide upon, there's logically a requirement to offer the same for arrays.&lt;/p&gt;
&lt;p&gt;Michael Kay&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
