<item>
   <title>Issue #147 created</title>
   <pubDate>2022-09-19T10:50:22Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/147</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-147</guid>
   <description>&lt;div&gt;&lt;p&gt;Terse syntax for map entries&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Allow variables to be used to construct map entries with&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the key being the variable name cast to xs:string and&lt;/li&gt;
&lt;li&gt;the value to be the value of the variable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The syntax would change to something along&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mapExpression ::= 'map' '{' ( expr ':' expr | variableReference ) [ ',' ( expr ':' expr | variableReference ) ]* '}'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;let $my-var := &amp;lt;root /&amp;gt;
let $other := map { "a": [ 1, 2, 3 ] }
return map {
  $my-var,
  $other
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;evaluates to&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;map {
  "my-var": &amp;lt;root /&amp;gt;
  "other": map { "a": [ 1, 2, 3 ] }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is the inverse operation of destructuring a map as proposed in https://github.com/qt4cg/qtspecs/issues/37&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let ${my-var, other} := map {
  "my-var": &amp;lt;root /&amp;gt;
  "other": map { "a": [ 1, 2, 3 ] }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the Slack discussion John Lumley and Liam Quinn raised concerns this construct might be error prone when both methods to construct an entry can be mixed&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;  map { $a : $b, $c }
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;map:for-each($m, function ($k, $v as xs:anyAtomic) { map{ $v : $k } }),
map:for-each($m, function ($k, $v as xs:anyAtomic) { map{ $v, $k } })
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
