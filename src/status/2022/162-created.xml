<item>
   <title>Issue #162 created</title>
   <pubDate>2022-09-27T19:20:35Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/162</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-162</guid>
   <description>&lt;div&gt;&lt;p&gt;Proposal to support unbounded variadic functions on map parameter keys.&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Where a parameter is defined as a map, then named/keyword arguments bind to keys in that map if the named/keyword argument does not match a parameter name in that function. For example, &lt;code&gt;fn:serialize($data, method: "json")&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Motivation&lt;/h1&gt;
&lt;p&gt;There are several functions that take an option map in XQFO. It can be clunky to construct the map options when calling these functions.&lt;/p&gt;
&lt;p&gt;The option map is a common pattern in other implementations. Specifically, MarkLogic makes use of that pattern.&lt;/p&gt;
&lt;h1&gt;Note&lt;/h1&gt;
&lt;p&gt;If the argument name is an NCName, the xs:NCName value should be cast to the map's key type using the XQFO type/value casting rules.&lt;/p&gt;
&lt;p&gt;The argument name should support string literals, as map keys can contain spaces. In this case, the xs:string type is cast to the map's key type using the XQFO type/value casting rules.&lt;/p&gt;
&lt;p&gt;The #159 proposal allows QNames for the argument names in order to support parameters that are QNames. When binding to a map key an error (static or dynamic) should be raised.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
