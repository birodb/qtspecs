<item>
   <title>Issue #256 created</title>
   <pubDate>2022-11-18T16:52:36Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/256</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-256</guid>
   <description>&lt;div&gt;&lt;p&gt;XQuery and XSLT function declarations: static and dynamic context for default parameter values&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In the new text for default values on parameters in XQuery function declarations, we don't say clearly what the static context for the default value expression is. In particular we don't say that it excludes the other parameters of the function. The XSLT spec has similar (though slightly different) shortcomings.&lt;/p&gt;
&lt;p&gt;There's a slight complication in that we say the dynamic context for the default value expression is the dynamic context of the function call. But what if the default value is a variable reference &lt;code&gt;$x&lt;/code&gt;? Statically, this will be (presumably, though we don't currently say) be bound to a global variable &lt;code&gt;$x&lt;/code&gt;. Now, we say (under "dynamic context") that the dynamic "variable values" contains the same [expanded QNames] as the [in-scope variables] in the [static context] for the expression. But, the static context for the default value expression and the static context for the function call have different in-scope variables and they must therefore have different variable values in the dynamic context, so it's wrong to say that the dynamic context for the default value expression is the same as that of the function call.&lt;/p&gt;
&lt;p&gt;My first instinct would be to restrict the default value to being what XSLT calls a "static expression" (this isn't defined in XQuery, but it could be defined easily enough). However, that would disallow using "." as the default value expression, which is something we wanted to permit.&lt;/p&gt;
&lt;p&gt;The next option would be to say that the dynamic context for a default value expression is the same as the dynamic context of the function call except that "variable values" contains bindings for global variables only. This feels rather kludgey, but it's workable in principle. (It's worth noting, and might be worth noting in the spec, that in XQuery all components of the dynamic context except the focus and the variable values are typically immutable within an execution scope. The same isn't true in XSLT, where we have additional dynamic context components like regex-group() and current-output-uri() to worry about.).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
