<item>
   <title>Issue #242 created</title>
   <pubDate>2022-11-16T00:57:27Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/242</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-242</guid>
   <description>&lt;div&gt;&lt;p&gt;Coercion rules used to convert function result to expected type&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;We have separated the rules for static and dynamic function calls, which was necessary because static calls can now use keywords, whereas dynamic calls can't.&lt;/p&gt;
&lt;p&gt;The new rules say that the coercion rules are used to convert the result to the expected result type in a dynamic call, but they fail to say that this also happens on a static call.&lt;/p&gt;
&lt;p&gt;It would be nicer (and less error prone) if we could combine the rules. Ideally we should define that a static function call &lt;code&gt;F(A, B, C)&lt;/code&gt; is equivalent to the dynamic call &lt;code&gt;F#3(A, B, C)&lt;/code&gt;. This in turn would be easier if we can find a way to extend function items to have optional parameters and to permit keyword arguments.&lt;/p&gt;
&lt;p&gt;Note also that the definition of the term "coercion rules" is deficient. It doesn't say what the rules are, it just gives an example of one situation where they are used.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
