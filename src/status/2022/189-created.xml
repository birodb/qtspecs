<item>
   <title>Issue #189 created</title>
   <pubDate>2022-10-07T18:07:44Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/189</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-189</guid>
   <description>&lt;div&gt;&lt;p&gt;Adopt the coercion rules for variables in XQuery&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Currently XSLT applies the coercion rules (formerly the function conversion rules) both when supplying values to arguments of a function declaring a required type, and when binding values to variables declaring a required type. This is pretty much essential because it allows xsl:variable and xsl:param to have the same semantics.&lt;/p&gt;
&lt;p&gt;XQuery applies the coercion rules only for function arguments, and not for variable bindings. For variables, the supplied value must already be a value of the required type. For example, you can't write &lt;code&gt;let $x as xs:decimal := @version&lt;/code&gt;, you have to write &lt;code&gt;let $x as xs:decimal := xs:decimal(@version)&lt;/code&gt;. (Or if you find that annoying, you can write &lt;code&gt;let $x as xs:decimal := +@version&lt;/code&gt;, because unary plus invokes coercion).&lt;/p&gt;
&lt;p&gt;This is the main reason declared types are not allowed in XPath: the XSLT community felt that if they were allowed, the rules had to be the same as the rules for XSLT variable bindings. We could eliminate this objection if XQuery adopted the coercion rules for variable bindings.&lt;/p&gt;
&lt;p&gt;I have some hesitation in proposing this, because when I proposed it before, it was quite strongly opposed by some of the original XQuery designers, whose views I respect. But although they argued their case strongly, I confess I did not understand their position. I simply see no reason why assignments to function parameters and assignments to variables should be handled differently. It works in XSLT, and makes the language more usable, and I see no reason why it should not work in XQuery.&lt;/p&gt;
&lt;p&gt;It's not uncommon for languages to impose different rules for the two cases. Java, for example has a variety of invocation contexts (strict and loose), and variable assignment allows conversions such as narrowing of integer constants that are not allowed on method calls (interestingly, Java allows &lt;em&gt;more&lt;/em&gt; conversions on variable assignment than on method calling). In XQuery, however, I can see no rationale for the rules being different.&lt;/p&gt;
&lt;p&gt;We're proposing syntax for XQuery (function calls with keyword parameters) that make parameter assignment look more like variable assignment. I think we should match this by making them semantically more similar.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
