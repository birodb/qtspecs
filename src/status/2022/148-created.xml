<item>
   <title>Issue #148 created</title>
   <pubDate>2022-09-20T13:24:59Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/148</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-148</guid>
   <description>&lt;div&gt;&lt;p&gt;[XQuery] add facility to get the type of a value&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;This could be a language construct like &lt;code&gt;type of $a&lt;/code&gt; similar to &lt;code&gt;$a instance of &amp;lt;type&amp;gt;&lt;/code&gt; or a function &lt;code&gt;fn:type-of(item()*)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It returns the string representation of the type of a value.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For atomic values, return the local name of the most specific built-in (XSD) type of which the value is an instance of.&lt;/li&gt;
&lt;li&gt;For nodes, return node-kind(name) where node-kind is for example "element" or "attribute" and name (for nodes that have a name) is the node name in Q{uri}local notation.&lt;/li&gt;
&lt;li&gt;For other functions return a string representation of the function signature that (a) conforms to XPath SequenceType syntax, and (b) uses EQName notation for qualified names.&lt;/li&gt;
&lt;li&gt;For empty maps and arrays return &lt;code&gt;map(*)&lt;/code&gt; and &lt;code&gt;array(*)&lt;/code&gt; respectively&lt;/li&gt;
&lt;li&gt;For arrays and maps with members and entries the implementation &lt;em&gt;can&lt;/em&gt; attempt to find the most specific shared type like &lt;code&gt;array(xs:string)&lt;/code&gt;, &lt;code&gt;map(xs:integer, element(banana))&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;The inspection should stop as early as possible, when the first mismatching type is encountered.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;type of "", (: yields "xs:string" :)
type of [], (: yields "array(*)" :)
type of [map{"a": true(), "b": false()}, map{"c", false()}], (: yields "array(map(xs:string, xs:boolean))" :)
type of ([], map{}, function () {}]), (: yields "function(*)" :)
type of [map{"a": true(), "b": "false"}, map{"c", false()}] (: yields "array(map(xs:string, xs:anyAtomic))" or "array(map(xs:string, *))" :)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I wrote an implementation in XQuery as a PoC utilizing typeswitch:&lt;/p&gt;
&lt;p&gt;https://github.com/line-o/xbow/commit/ca6e593f869c15b1fb372d24653715abfbda5cf8&lt;/p&gt;
&lt;p&gt;There is an implementation in baseX &lt;a href="https://docs.basex.org/wiki/Inspection_Module#inspect:type"&gt;inspect:type&lt;/a&gt;.
&lt;code&gt;inspect:type#2&lt;/code&gt; allowing to set additional options which should be considered.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
