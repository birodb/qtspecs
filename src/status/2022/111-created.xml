<item>
   <title>Issue #111 created</title>
   <pubDate>2022-02-04T23:02:52Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/111</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-111</guid>
   <description>&lt;div&gt;&lt;p&gt;[XQuery] FLWOR tracing&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I've been developing a complex query involving grouping, windowing, and sorting, and finding it very hard to debug.&lt;/p&gt;
&lt;p&gt;I propose a new clause that can be included anywhere in a FLWOR expression&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TraceClause ::= "trace" Expr&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;for example&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for $item in //items
trace "input: ", $item/@id
group by $sku := $item/sku
trace "group: ", data($sku), " items: ", data($item/@id)
return count($item) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As with fn:trace(), the precise output is implementation-dependent.&lt;/p&gt;
&lt;p&gt;The trace clause passes the incoming tuple stream unchanged to the next clause in the pipeline, with the side effect of evaluating an expression in the context of the variables defined in that tuple stream and displaying the value of the expression in an implementation-defined way.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
