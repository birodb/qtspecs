<item>
   <title>Issue #238 created</title>
   <pubDate>2022-11-12T08:30:38Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/238</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-238</guid>
   <description>&lt;div&gt;&lt;p&gt;Support Invisible XML&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I propose that we support Invisible XML by means of a function&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fn:invisible-xml($grammar as xs:string) as (function($string) as document-node())&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The function takes as input a string defining an invisible XML grammar in ixml format, and returns as output a function that can be used to parse strings conforming to that grammar, converting them into XDM document nodes.&lt;/p&gt;
&lt;p&gt;As a "dog-food" use case, we could use this for rendering function signatures in the F&amp;amp;O specification. Rather than using manual markup to define the signature of each function, we could define an IXML grammar for function signatures, and use this as the basis for formatting the representation in the spec. This would be particularly beneficial as we start to introduce more complex signatures involving record types.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
