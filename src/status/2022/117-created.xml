<item>
   <title>Issue #117 created</title>
   <pubDate>2022-06-21T16:16:30Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/117</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-117</guid>
   <description>&lt;div&gt;&lt;p&gt;Downcasting (relabelling) in the coercion rules&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The proposed coercion rules (aka function conversion rules) permitting down-casting (aka "relabelling") introduce a backwards incompatibility.&lt;/p&gt;
&lt;p&gt;For example in XSLT3 test case as-1711 we have&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;xslt:variable name="var1" select="/doc-schemaas/elem-NMTOKEN" as="xs:token"/&amp;gt;

   &amp;lt;xslt:template match="/doc-schemaas"&amp;gt;
            &amp;lt;xslt:value-of select="$var1 instance of xs:NMTOKEN"/&amp;gt;
   &amp;lt;/xslt:template&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where the result of atomising elem-NMTOKEN is of type xs:NMTOKEN.&lt;/p&gt;
&lt;p&gt;Under the new rules this is "relabelled" as xs:token, causing the "instance of" test to return false, where in XSLT 2.0/3.0 it returned true.&lt;/p&gt;
&lt;p&gt;I think the relabelling rules should probably be amended so that if the supplied value is already an instance of the required type, no relabelling takes place - it retains its existing type.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
