<item>
   <title>Issue #277 created</title>
   <pubDate>2022-11-29T12:50:27Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/277</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-277</guid>
   <description>&lt;div&gt;&lt;p&gt;Overriding functions using xsl:import&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In XSLT 3.0, you can have a module M that contains an xsl:function F#2, and in another module you can import M, and declare another xsl:function F#3.&lt;/p&gt;
&lt;p&gt;In the 4.0 spec we appear to disallow this with the paragraph (in ยง10.3.4):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A stylesheet function may be overridden by another stylesheet function with the same name that has higher [import precedence]. This is only allowed, however, if the [arity range] of the overriding function includes the totality of the arity range of the overridden function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In fact, the error conditions we go on to define (XTSE0769 and XTSE0770) are more carefully worded and do not make the above situation an error. XTSE0769 says that if F has higher import precedence than G, then either the arity ranges of F and G must be disjoint, or the arity range of F must include the totality of G. XTSE0770 says that if F and G have the same import precedence, then their arity ranges must be disjoint.&lt;/p&gt;
&lt;p&gt;The paragraph cited should be replaced with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A stylesheet function may be overridden by another stylesheet function with the same name that has higher [import precedence]. This is only allowed, however, if either (a) the [arity range] of the overriding function includes the totality of the arity range of the overridden function, or (b) the two arity ranges are non-overlapping.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is also scope for editorial improvement to ยง10.3.4. It describes three separate scenarios:&lt;/p&gt;
&lt;p&gt;(a) overriding functions using xsl:import and import precedence&lt;/p&gt;
&lt;p&gt;(b) overriding functions using xsl:use-package and xsl:override&lt;/p&gt;
&lt;p&gt;(c) overriding extension/external functions using xsl:function (or vice versa)&lt;/p&gt;
&lt;p&gt;and it would be much easier to read the section if these were clearly distinguished.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
