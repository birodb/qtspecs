<item>
   <title>Issue #165 created</title>
   <pubDate>2022-09-29T11:38:03Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/165</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-165</guid>
   <description>&lt;div&gt;&lt;p&gt;Keyword arguments: ":=" or ":"?&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In function calls using keyword arguments, should we use the syntax &lt;code&gt;name := value&lt;/code&gt;, or &lt;code&gt;name : value&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Regarding &lt;code&gt;:=&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Function declarations in XQuery will presumably use the syntax &lt;code&gt;name := value&lt;/code&gt; to define the default value for a parameter,  by analogy with initial values in global variable declarations, so it seems consistent to use &lt;code&gt;name := value&lt;/code&gt; in function calls as well&lt;/li&gt;
&lt;li&gt;The syntax &lt;code&gt;name := value&lt;/code&gt; is also used in XPath &lt;code&gt;let&lt;/code&gt; expressions to bind a value to a variable name.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regarding &lt;code&gt;:&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It matches the use in map constructors&lt;/li&gt;
&lt;li&gt;It's used this way in C#&lt;/li&gt;
&lt;li&gt;There is a need to use whitespace to prevent ambiguity, for example in a construct like &lt;code&gt;f:display(first: first, last: last)&lt;/code&gt;; moreover, if the space is omitted, there is a danger that the expression will still be valid but will have an unintended meaning.&lt;/li&gt;
&lt;li&gt;Map constructors also require the disambiguating whitespace, but with map constructors, use of a bare name on the LHS is unusual (more common is a string literal in quotes), and failure to include the whitespace is almost certain to lead to a syntax error.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My feeling is that &lt;code&gt;:=&lt;/code&gt; is the better choice.&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;=&lt;/code&gt; (as used in Python) is not an option, because a call like &lt;code&gt;not(x = y)&lt;/code&gt; already has a well-defined meaning.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
