<item>
   <title>Issue #213 created</title>
   <pubDate>2022-10-16T18:50:56Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/213</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-213</guid>
   <description>&lt;div&gt;&lt;p&gt;Lookup/Indexing operator for sequences (supersedes #50)&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;This proposal attempts to take over where issue #50 left off: that issue contains a lengthy discussion and many alternative suggestions, and seemed to end with a concrete proposal which I summarise here. I propose that issue #50 now be closed.&lt;/p&gt;
&lt;p&gt;The proposal is for an expression which I will call a subscript-expression, taking the form&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SubscriptExpression ::= ExprSingle "[#" Expr "]"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The first operand evaluates to an arbitrary sequence. The second operand evaluates to a sequence of integers (or is coerced to a sequence of integers using the coercion rules). Both operands are evaluated in the context of the containing expression (despite the similarity to filter expressions, the predicate does not have its own focus).&lt;/p&gt;
&lt;p&gt;The result of the expression &lt;code&gt;A [# B]&lt;/code&gt; (assuming B is indeed a sequence of integers) is &lt;code&gt;for $i in B return A[$i]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$input[#1]&lt;/code&gt; - this is synonymous with &lt;code&gt;$input[1]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$input[#1 to 5]&lt;/code&gt; - equivalent to &lt;code&gt;$input[position() = (1 to 5)]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$input[#reverse(1 to 5)]&lt;/code&gt; - returns the first 5 items in reverse order&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The main differences from the existing A[B] syntax are:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(a) there is no overloading, the semantics do not depend on the dynamic type of B.&lt;/p&gt;
&lt;p&gt;(b) the value of the predicate can be a sequence of integers, not just a single integer&lt;/p&gt;
&lt;p&gt;(c) the focus for the predicate is the same as the outer focus, so expressions such as &lt;code&gt;*[#1 to count(*) idiv 2]&lt;/code&gt; make sense.&lt;/p&gt;
&lt;p&gt;Alternative 1: use the syntax &lt;code&gt;A #[ B ]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Alternative 2: use a function &lt;code&gt;items-at(A, B)&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
