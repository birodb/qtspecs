<item>
   <title>Issue #108 created</title>
   <pubDate>2022-01-19T08:30:58Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/108</link>
   <guid>https://qt4cg.org/@qt4cg/2022/#created-108</guid>
   <description>&lt;div&gt;&lt;p&gt;Template match using values of [tunnel] parameters&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;It would often be useful to make a template match conditional on the values of the supplied parameters, especially tunnel parameters.&lt;/p&gt;
&lt;p&gt;This is especially the case when matching JSON-derived structures (maps and arrays), as no context information is then available via the ancestor axis.&lt;/p&gt;
&lt;p&gt;Obviously, the parameters are not in scope within the match pattern, and I don't propose to change that. Instead I propose that xsl:param (when used in a template rule) should have a &lt;code&gt;test="expression"&lt;/code&gt; attribute. The expression may refer to the parameter being declared (and to no other parameters or local variables). For the template rule to match, any parameters having a test attribute must be satisfied: specifically, the test expression must have an effective boolean value of true. If no value is supplied for the parameter, then if required="yes" is specified, the template rule does not match; if required="no" is specified, the test is applied to its default value. The focus for evaluating the test expression is absent. The existence of the test has no effect on the priority of the template rule. An error evaluating the test expression means that the template rule does not match.&lt;/p&gt;
&lt;p&gt;For example, this template rule&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;xsl:template match="record(long, lat)"&amp;gt;
  &amp;lt;xsl:param name="country" test="$country = 'UK'" tunnel="yes" required="yes"/&amp;gt;
  ....
&amp;lt;/xsl:template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;matches only if the tunnel parameter &lt;code&gt;$country&lt;/code&gt; is present with the value "UK".&lt;/p&gt;
&lt;p&gt;In some cases this capability can substitute for modes, except that the values are entirely dynamic.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
