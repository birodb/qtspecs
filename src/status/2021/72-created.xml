<item>
   <title>Issue #72 created</title>
   <pubDate>2021-05-04T07:38:50Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/72</link>
   <guid>https://qt4cg.org/@qt4cg/2021/#created-72</guid>
   <description>&lt;div&gt;&lt;p&gt;[FO] Provide better support for URI processing within an expression&lt;/p&gt;&lt;div class="markup"&gt;&lt;blockquote&gt;
&lt;p&gt;Use Case 1: Decode an encoded URI string.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is difficult to implement correctly, and is a commonly asked question/request on sites like stackoverflow. Vendors have even implemented their own functions, like &lt;code&gt;xdmp:uri-decode&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Use Case 2: Extracting the hash/parameters from a URI string.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is common when manipulating URI strings and not using something like RESTXQ to bind the query parameters to function parameters. The API should:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;extract the hash as a string, and the parameters as a name/value map;&lt;/li&gt;
&lt;li&gt;combine parameters with the same name into the same map entry;&lt;/li&gt;
&lt;li&gt;decode the values where necessary.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Use Case 3: Extract the other parts of a URI string.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This can be useful if writing a RESTXQ or similar implementation in XSLT/XQuery. It can also be useful for generating response headers such as Origin, or doing HTTP to HTTPS redirects.&lt;/p&gt;
&lt;p&gt;It is easy to make mistakes and the wrong assumptions when writing a URI parser by hand. Additionally, it is not easy to implement in XSLT/XQuery as functions like &lt;code&gt;analyse-string&lt;/code&gt; and &lt;code&gt;tokenize&lt;/code&gt; are not powerful enough to implement a lexer, and manipulating codepoints is difficult without stateful logic.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
