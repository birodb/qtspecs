<item>
   <title>Issue #88 created</title>
   <pubDate>2021-08-16T10:06:55Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/88</link>
   <guid>https://qt4cg.org/@qt4cg/2021/#created-88</guid>
   <description>&lt;div&gt;&lt;p&gt;[XPATH] breaking ancestor or descendant axes&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;A common issue that I often have to deal with in Xpath (within xslt most of the time) is to be able to break descendants or ancestors axes. To do that I have to use predicates which are sometimes quite complicated, because it has to appen to every encountered nodes, which force to think really globally. Maybe this is proper to functionnal langages but maybe it would be possible to add simple feature for this common use-case.&lt;/p&gt;
&lt;p&gt;An really simple example (no difficult to resolve here, but it's sometimes much more complex) :&lt;/p&gt;
&lt;p&gt;Let's say I want to get all "doc" elements that have a table &lt;em&gt;as content&lt;/em&gt; :&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;doc id="doc1"&amp;gt;
  &amp;lt;header/&amp;gt;
  &amp;lt;table/&amp;gt;
  &amp;lt;doc id="doc2"&amp;gt;
    &amp;lt;p/&amp;gt;
    &amp;lt;doc id="doc3"&amp;gt;
      &amp;lt;table/&amp;gt;
    &amp;lt;/doc&amp;gt;
  &amp;lt;/doc&amp;gt;
  &amp;lt;footer&amp;gt;
    &amp;lt;doc id="doc4"&amp;gt;
      &amp;lt;table/&amp;gt;
    &amp;lt;/doc&amp;gt;
  &amp;lt;/footer&amp;gt;
&amp;lt;/doc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example doc1, doc3 and doc4 all have a table "as content", but doc2 doesn't, though it has a table as descendant.&lt;/p&gt;
&lt;p&gt;The xpath to get all doc that have a table as content would be something like :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//doc[let $self := . return exists (descendant::table[ancestor::doc[1] is $self])]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I don't really have any idea on how to express a new way to break this axis, let's suggest a predicate on the axis itself, something like :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//doc[descendant[break-axis-on-matching='self::doc']::table]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This syntax is really not nice, but I guess you see the idea ?
Maybe I missed a way to achieve this in Xpath 3.1 ?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
