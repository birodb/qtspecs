<item>
   <title>Issue #84 created</title>
   <pubDate>2021-07-30T13:26:48Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/84</link>
   <guid>https://qt4cg.org/@qt4cg/2021/#created-84</guid>
   <description>&lt;div&gt;&lt;p&gt;Proposal : allow ignorable &amp;lt;xsl:div&amp;gt; wrapper for documentation or organize the code&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;It's a long time I'm missing a way to organize XSLT code. Using &lt;a href="https://qt4cg.org/branch/master/xslt-40/Overview-diff.html#enclosed-modes"&gt;enclosed mode&lt;/a&gt; will help a lot, but it's not its main purpose and it's not enought I guess to be able :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Group templates or function that go together (according to the author)&lt;/li&gt;
&lt;li&gt;easily comments blocks of code for debugging purpose&lt;/li&gt;
&lt;li&gt;add documentation on any XSLT elements : not only top level elements as with oxygen "xd" elements&lt;/li&gt;
&lt;li&gt;add foreign xml structures that can help for static analysing of the code (ex : informations to help with xslt schematron validation, that need autocompletion with a specific xml schema, that means processing instructions are not engough here)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What about a &lt;code&gt;xsl:div&lt;/code&gt; element (for division), this is a well known element's name, used in HTML but also Relax NG.
That element might have a &lt;code&gt;process-content&lt;/code&gt; attribute with 2 possible values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;true&lt;/code&gt; (default): to say the content should be "applied" as &lt;code&gt;xsl:div&lt;/code&gt; might be nested  with different process-content attribute values&lt;/li&gt;
&lt;li&gt;&lt;code&gt;false&lt;/code&gt;: to say the content has to be completely skipped at compilation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;xsl:stylesheet 
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xd="http://www.oxygenxml.com/ns/doc/xsl"
  xmlns:local="local"
  xmlns:xslq="https://github.com/mricaud/xsl-quality"
  xmlns:a="http://my-annotations.org"
  version="4.0"&amp;gt;
  
  &amp;lt;xsl:div&amp;gt;
    &amp;lt;xsl:div process-content="false"&amp;gt;
      &amp;lt;p&amp;gt;This block is about "foo"&amp;lt;/p&amp;gt;
    &amp;lt;/xsl:div&amp;gt;
    
    &amp;lt;xsl:function name="local:has-foo-child" as="xs:boolean"&amp;gt;
      &amp;lt;xsl:param name="e"&amp;gt;
        &amp;lt;xsl:div process-content="false"&amp;gt;&amp;lt;xd:doc&amp;gt;Any elements&amp;lt;/xd:doc&amp;gt;&amp;lt;/xsl:div&amp;gt;
      &amp;lt;/xsl:param&amp;gt;
      &amp;lt;xsl:sequence select="exists($e/foo)"/&amp;gt;
    &amp;lt;/xsl:function&amp;gt;
    
    &amp;lt;xsl:template match="foo"&amp;gt;
        &amp;lt;xsl:div process-content="false"&amp;gt;
           &amp;lt;xslq:schematron ignore-rule="mode-name-must-be-namepace-prefixed"/&amp;gt;
         &amp;lt;xsl:div&amp;gt;
        &amp;lt;xsl:value-of select="normalize-space(.)"&amp;gt;&amp;lt;xsl:div process-content="false"&amp;gt;&amp;lt;xd:doc&amp;gt;Normalization is needed here&amp;lt;/xd:doc&amp;gt;&amp;lt;/xsl:div&amp;gt;
    &amp;lt;/xsl:template&amp;gt;
    
  &amp;lt;/xsl:div&amp;gt;
  
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Writing this example let me see that it's a bit verbose. Another proposal would be to declare a set of namespaces that are to be ignored at compilation time, wether by skipping it or by apply what's inside of it.
The same example would give something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;xsl:stylesheet 
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xd="http://www.oxygenxml.com/ns/doc/xsl"
  xmlns:local="local"
  xmlns:xslq="https://github.com/mricaud/xsl-quality"
  xmlns:a="http://my-annotations.org"
  version="4.0"&amp;gt;
  
  &amp;lt;xsl:ignore-namespaces select="map{
    'http://www.oxygenxml.com/ns/doc/xsl' : 'skip', 
    'http://my-annotations.org' : 'apply',
    'https://github.com/mricaud/xsl-quality' : 'skip'
    }"/&amp;gt;
    
  
  &amp;lt;a:div label="This block is about foo"&amp;gt;
    
    &amp;lt;xsl:function name="local:has-foo-child" as="xs:boolean"&amp;gt;
      &amp;lt;xsl:param name="e"&amp;gt;&amp;lt;xd:doc&amp;gt;Any elements&amp;lt;/xd:doc&amp;gt;&amp;lt;/xsl:param&amp;gt;
      &amp;lt;xsl:sequence select="exists($e/foo)"/&amp;gt;
    &amp;lt;/xsl:function&amp;gt;
    
    &amp;lt;xsl:template match="foo" mode="bar"&amp;gt;
      &amp;lt;xslq:schematron ignore-rule="mode-name-must-be-namepace-prefixed"/&amp;gt;
      &amp;lt;xsl:value-of select="normalize-space(.)" xd:doc="normalization is needed here"/&amp;gt;
    &amp;lt;/xsl:template&amp;gt;
    
  &amp;lt;/a:div&amp;gt;
  
&amp;lt;/xsl:stylesheet&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, there are probably multiple ways to achieve this need.&lt;/p&gt;
&lt;p&gt;I would be really happy to have such possiblilities, but I don't know if some of you have the same need.&lt;/p&gt;
&lt;p&gt;Thanks for any comments / replies / ideas / feedbacks&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
