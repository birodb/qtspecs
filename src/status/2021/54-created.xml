<item>
   <title>Issue #54 created</title>
   <pubDate>2021-01-26T08:55:08Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/54</link>
   <guid>https://qt4cg.org/@qt4cg/2021/#created-54</guid>
   <description>&lt;div&gt;&lt;p&gt;[XPath] [XQuery] Keyword arguments don't work with all parameters/keys in static functions.&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The KeywordArgument symbol restricts the argument name to an NCName. This has two issues:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;for non-variadic and bounded-variadic functions, a parameter can be a QName, so may be in a different namespace, or there can be ambiguity if there are multiple parameters with the same local-name in different namespaces;&lt;/li&gt;
&lt;li&gt;for map-variadic functions, a parameter key can contain spaces, so cannot be expressed as an NCName.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Syntax&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;KeywordArgument ::= KeywordArgumentName  ":"  ExprSingle
KeywordArgumentName ::= EQName | StringLiteral
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; I'm using the favoured map-based syntax here. If that is not used, then the &lt;code&gt;":"&lt;/code&gt; should be &lt;code&gt;":="&lt;/code&gt; as it is in the current draft.&lt;/p&gt;
&lt;h3&gt;Semantics&lt;/h3&gt;
&lt;p&gt;For non-variadic and bounded-variadic functions, a KeywordArgumentName is matched as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An &lt;em&gt;EQName&lt;/em&gt; matches against the expanded QName of the parameter;&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;StringLiteral&lt;/em&gt; is cast to an NCName (with an XPTY0004 error if it is not a valid NCName), which is in no namespace (like other variables such as VarName symbols); the resulting expanded QName then matches against the expanded QName of the parameter.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For map-variadic functions, a KeywordArgumentName is matched as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An &lt;em&gt;NCName&lt;/em&gt; uses the local-name as the key in the constructed map cast to the key type of the map. This follows the XQFO casting rules with the source type of the local-name being &lt;code&gt;xs:NCName&lt;/code&gt; and the target type being the map's key type.;&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;QName&lt;/em&gt; or &lt;em&gt;URIQualifiedName&lt;/em&gt; results in an XPTY0004 error as it does not form a valid key name;&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;StringLiteral&lt;/em&gt; uses the value of the string as the key in the constructed map.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
