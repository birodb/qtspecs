<item>
   <title>Issue #58 created</title>
   <pubDate>2021-02-15T12:06:08Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/58</link>
   <guid>https://qt4cg.org/@qt4cg/2021/#created-58</guid>
   <description>&lt;div&gt;&lt;p&gt;[XQuery] String Value Templates&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;A &lt;em&gt;string value template&lt;/em&gt; (SVT) is a StringLiteral that supports enclosed expression values and entities. It is written as either &lt;code&gt;T"..."&lt;/code&gt; or &lt;code&gt;T'...'&lt;/code&gt;, where the &lt;code&gt;T&lt;/code&gt; stands for "template".&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; An SVT is similar to an attribute value template or text value template in XSLT.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For instance, the following expression:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for $s in ("one", "two", "red", "blue")
return T"{$s} fish"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;evaluates to the sequence &lt;code&gt;("one fish", "two fish", "red fish", "blue fish")&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A string value template &lt;code&gt;T"xyz"&lt;/code&gt; is equivalent to the expression &lt;code&gt;&amp;lt;svt t="xyz"/&amp;gt;/@t/string()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Grammar&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;PrimaryExpr ::= ... | StringValueTemplate
StringValueTemplate ::= ('T"' (EscapeQuot | QuotAttrValueContent)* '"')
                      | ("T'" (EscapeApos | AposAttrValueContent)* "'")
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;T"&lt;/code&gt; and &lt;code&gt;T'&lt;/code&gt; are a single token/unit (i.e. no whitespace/comments are allowed between the characters), just like the &lt;code&gt;Q{&lt;/code&gt; in BracedURILiterals.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
