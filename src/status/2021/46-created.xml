<item>
   <title>Issue #46 created</title>
   <pubDate>2021-01-13T00:36:15Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/46</link>
   <guid>https://qt4cg.org/@qt4cg/2021/#created-46</guid>
   <description>&lt;div&gt;&lt;p&gt;[XSLT] wider support  as attribute&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I'd like to see@as on xsl:sequence. That way i can write, e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;xsl:function name="dc:slice-count" as="xs:integer"&amp;gt;
  &amp;lt;xsl:param name="toast" as="element(toast)" /&amp;gt;
  &amp;lt;xsl:for-each select="$toast" as="xs:integer"&amp;gt;
    &amp;lt;xsl:sequence select="@cooked-slices + @raw-slices"  as="xs:integer" /&amp;gt;
  &amp;lt;/xsl:for-each&amp;gt;
&amp;lt;/xsl:function&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It would be an error for the for-each to have other than exactly one integer as its result, and the same for the &lt;code&gt;@sequence&lt;/code&gt;. In this simple example there's not much scope for that to happen of course,&lt;/p&gt;
&lt;p&gt;Maybe on anything with a &lt;code&gt;select&lt;/code&gt;  attribute?&lt;/p&gt;
&lt;p&gt;Parenthetically, a context-item attribute on xsl:sequence would obviate the XSLT1-ish xsl:for-each there, although $toast/(@a, @b) =&amp;gt; sum() would work as well and be XSLT  3-ish.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
