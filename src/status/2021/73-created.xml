<item>
   <title>Issue #73 created</title>
   <pubDate>2021-05-07T07:33:59Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/73</link>
   <guid>https://qt4cg.org/@qt4cg/2021/#created-73</guid>
   <description>&lt;div&gt;&lt;p&gt;Split a string by graphemes&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The new &lt;code&gt;fn:characters&lt;/code&gt; function is useful, but doesn't solve a problem of manipulating strings where multiple codepoints correspond to a single grapheme. For example:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;characters with one or more combining characters;&lt;/li&gt;
&lt;li&gt;emoji with skin tone variant selectors;&lt;/li&gt;
&lt;li&gt;emoji with gender variant selectors;&lt;/li&gt;
&lt;li&gt;multi-sequence emoji -- family, wales flag, etc.;&lt;/li&gt;
&lt;li&gt;region indicator pairs for flags.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Getting this right is complex, and implementing it as a regular expression is easy to get wrong/make mistakes.&lt;/p&gt;
&lt;h1&gt;fn:graphemes&lt;/h1&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Splits the supplied string into a sequence of single-grapheme (one or more character) strings.&lt;/p&gt;
&lt;h2&gt;Signature&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;fn:graphemes($value as xs:string?) as xs:string*&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Properties&lt;/h2&gt;
&lt;p&gt;This function is ·deterministic·, ·context-independent·, and ·focus-independent·.&lt;/p&gt;
&lt;h2&gt;Rules&lt;/h2&gt;
&lt;p&gt;The function returns a sequence of strings, containing the corresponding ·grapheme· in $value. These are determined by the corresponding Unicode rules for what constitutes a ·grapheme·. The version of Unicode and the Unicode Emoji standards is ·implementation-dependent·.&lt;/p&gt;
&lt;p&gt;If $value is a zero-length string or the empty sequence, the function returns the empty sequence.&lt;/p&gt;
&lt;h2&gt;Examples&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The expression &lt;code&gt;fn:graphemes("Thérèse")&lt;/code&gt; returns &lt;code&gt;("T", "h", "é", "r", "è", "s", "e")&lt;/code&gt;, irrespective of whether the e characters use combining characters or not.&lt;/p&gt;
&lt;p&gt;The expression &lt;code&gt;fn:graphemes("")&lt;/code&gt; returns &lt;code&gt;()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The expression &lt;code&gt;fn:graphemes(())&lt;/code&gt; returns &lt;code&gt;()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The expression &lt;code&gt;fn:graphemes("👋🏻👋🏼👋🏽👋🏾👋🏿")&lt;/code&gt; returns &lt;code&gt;("👋🏻", "👋🏼", "👋🏽", "👋🏾", "👋🏿")&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The expression &lt;code&gt;fn:graphemes("👪")&lt;/code&gt; returns &lt;code&gt;("👪")&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The expression &lt;code&gt;fn:graphemes("👨‍🔬👩‍🔬")&lt;/code&gt; returns &lt;code&gt;("👨‍🔬", "👩‍🔬")&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The expression &lt;code&gt;fn:graphemes("🇪🇪🇩🇪🇫🇷🏴󠁧󠁢󠁷󠁬󠁳󠁿🇮🇸")&lt;/code&gt; returns &lt;code&gt;("🇪🇪", "🇩🇪", "🇫🇷", "🏴󠁧󠁢󠁷󠁬󠁳󠁿", "🇮🇸")&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
