<item>
   <title>Issue #77 created</title>
   <pubDate>2021-05-25T22:00:28Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/77</link>
   <guid>https://qt4cg.org/@qt4cg/2021/#created-77</guid>
   <description>&lt;div&gt;&lt;p&gt;[XQUF] Allow manipulation of maps and arrays&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;As discussed in the xml.com Slack workspace's xpath-ng channel, there is interest in extending the XQuery Update Facility to allow manipulation of maps and arrays—in effect, to facilitate the editing of large, deep JSON documents.&lt;/p&gt;
&lt;p&gt;For example, @DrRataplan provided this use case (the first code snippet can be viewed at &lt;a href="https://xpath.playground.fontoxml.com/?mode=0&amp;amp;variables=%7B%7D&amp;amp;xml=%3Cxml%3E%0A%3C%2Fxml%3E&amp;amp;xpath=let+%24theMap+%3A%3D+map%7B%27key%27%3Amap%7B%27deeperKey%27%3A+%5B1%2C2%2C3%5D%7D%7D%0A%0Areturn%0A%0A%24theMap+%3D%3E+map%3Aput%28%27key%27%2C+%24theMap%3Fkey+%3D%3E+map%3Aput%28%27deeperKey%27%2C+array%3Aappend%28%24theMap%3Fkey%3FdeeperKey%2C+42%29%29%29&amp;amp;context="&gt;fontoxml's playground&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think XQUF for JSON may have its merit. Editing larger JSON documents using XQuery is not the most elegant. I mean, in JavaScript, changing a value in a deep map is &lt;code&gt;theMap['key']['deeperKey'].push(42)&lt;/code&gt;. In XPath, it is more like:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;$theMap 
=&amp;gt; map:put('key', $theMap?key)
=&amp;gt; map:put('deeperKey', array:append($theMap?key?deeperKey, 42)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In XQUF terms, I think this would look a bit like:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;insert 42 as last into $theMap?key?deeperKey
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;... which is at least a lot shorter.&lt;/p&gt;
&lt;p&gt;At some point when working on a project that tried to edit some JSON metadata objects in XQuery I implemented a function that accepted a map, a path of keys, a value and some semantics, such as inserting at the start vs. at the end. It did not work too great in the end and we went for JavaScript functions instead. Just too explicit and hard to debug.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See also &lt;a href="https://stackoverflow.com/questions/67652693/is-xquery-3-1-designed-for-advanced-json-editing/67653949#67653949"&gt;this discussion at StackOverflow&lt;/a&gt;, where a user was struggling to use &lt;code&gt;map:put&lt;/code&gt; or &lt;code&gt;map:remove&lt;/code&gt; on deeper entries in a map; asked, "Is XQuery 3.1 designed for advanced JSON editing?"; and worried that XQuery "might not be the right choice" for his use case. Highlights from the responses:&lt;/p&gt;
&lt;p&gt;@michaelhkay wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You're correct that doing what I call deep update of a map is quite difficult with XQuery 3.1 (and indeed XSLT 3.0) as currently defined. And it's not easy to define language constructs with clean semantics. I attempted to design a construct as an XSLT extension instruction - see https://saxonica.com/documentation10/index.html#!extensions/instructions/deep-update -- but I don't think its anywhere near a perfect solution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;@ChristianGruen wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Updates primitives had been defined for JSONiq (https://www.jsoniq.org/docs/JSONiqExtensionToXQuery/html-single/index.html#section-json-updates), but I believe they haven’t made it into the reference implementation. They could also be considered for XQuery 4.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;@michaelhkay responded:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If I'm not mistaken, maps in JSONiq have object identity, which is not true of XQuery maps (which are pure functional data structures). That makes the semantics of deep update much easier to define, but makes it more difficult to make simple operations such as &lt;code&gt;put()&lt;/code&gt; and &lt;code&gt;remove()&lt;/code&gt; efficient.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In Slack @liamquin also wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the proposals i've seen for this in the past required that maps and arrays be given identity in some way, but then you have the problem that e.g. &lt;code&gt;map:insert&lt;/code&gt; returns a new map, which is not how an XQuery update expression works&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;@jonathanrobie also wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Yes, but the first question is this: how much will is there to support JSON updates in XQuery update?&lt;/p&gt;
&lt;p&gt;I would love to have this.  I no longer work for an implementation of XQuery.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;@adamretter added:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sounds like a nice idea&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
