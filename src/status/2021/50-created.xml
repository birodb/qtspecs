<item>
   <title>Issue #50 created</title>
   <pubDate>2021-01-16T21:06:19Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/50</link>
   <guid>https://qt4cg.org/@qt4cg/2021/#created-50</guid>
   <description>&lt;div&gt;&lt;p&gt;[XPath] Introduce the lookup operator for sequences&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In XPath 3.1 it is convenient to use the &lt;code&gt;?&lt;/code&gt; lookup operator on arrays and maps.&lt;/p&gt;
&lt;p&gt;It is easy and readable to construct expressions, such as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  [10, 20, 30]?(2, 3, 1, 1, 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this understandably produces the sequence:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;20, 30, 10, 10, 20
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, it is not possible to write:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(10, 20, 30)[2, 3, 1, 1, 2]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(10, 20, 30)(2, 3, 1, 1, 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(10, 20, 30)?(2, 3, 1, 1, 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This proposal is to allow the use on &lt;code&gt;sequences&lt;/code&gt; of the postfix lookup operator &lt;code&gt;?&lt;/code&gt;  with the same syntax as it is now used for &lt;code&gt;arrays&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; lookup operator will be applied on sequences whose first item isn't an array or a map. The only change would be to allow the type of the left-hand side to be a &lt;code&gt;sequence&lt;/code&gt;,  in addition to the currently allowed &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;array&lt;/code&gt; types. At present, applying &lt;code&gt;?&lt;/code&gt; on any such sequence results in error. In case the first item of the LHS sequence is an array or a map, then the current XPath 3.1 semantics is in force, which applies the RHS to each item in the sequence.&lt;/p&gt;
&lt;p&gt;The restriction in the above paragraph can be eliminated if we decide to use a different than &lt;code&gt;?&lt;/code&gt; symbol for this operator, for example &lt;code&gt;^&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The goal of this feature is achieving conciseness, readability, understandability and convenience.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For example, now one could easily produce from a sequence a projection / rearrangement with any desired multiplicity and ordering.&lt;/p&gt;
&lt;p&gt;Thus, it would be easy to express the function &lt;code&gt;reverse()&lt;/code&gt; as simply:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$seq?($len to 1 by -1)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
