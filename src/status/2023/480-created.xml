<item>
   <title>Issue #480 created</title>
   <pubDate>2023-05-07T18:22:51Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/480</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-480</guid>
   <description>&lt;div&gt;&lt;p&gt;Allow type promotion of xs:string to xs:anyURI&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;If it hasn't already been considered and ruled out, I'd like to propose adding a type promotion rule to XPath 4 that would allow &lt;code&gt;xs:string&lt;/code&gt; to be type-promoted to &lt;code&gt;xs:anyURI&lt;/code&gt;, so that functions with parameters whose types are declared as &lt;code&gt;xs:anyURI&lt;/code&gt; can directly take &lt;code&gt;xs:string&lt;/code&gt; values, without having to first cast these to &lt;code&gt;xs:anyURI&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This would empower function authors to select &lt;code&gt;xs:anyURI&lt;/code&gt; as a type - signaling that they’re expecting a URI - without forcing users of the function into explicitly casting their string-typed URIs.&lt;/p&gt;
&lt;p&gt;The motivation behind this proposal is that many eXist users are frustrated when using the eXist extension functions that properly declare parameters as &lt;code&gt;xs:anyURI&lt;/code&gt;. If this proposal isn’t adopted, that’s ok; we’ll just eliminate the use of &lt;code&gt;xs:anyURI&lt;/code&gt; in our functions, as proposed in https://github.com/eXist-db/exist/issues/4632. But this would a bit unfortunate for authors of functions who see the use of &lt;code&gt;xs:anyURI&lt;/code&gt; as a proper expression of intent in their functions.&lt;/p&gt;
&lt;p&gt;The change would be to https://www.w3.org/TR/xpath-31/#promotion - and I guess would be a 3rd item, called "String type promotion", saying:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A value of type &lt;code&gt;xs:string&lt;/code&gt; can be promoted to the type &lt;code&gt;xs:anyURI&lt;/code&gt;. The result of this promotion is created by casting the original value to the type &lt;code&gt;xs:anyURI&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
