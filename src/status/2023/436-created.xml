<item>
   <title>Issue #436 created</title>
   <pubDate>2023-04-11T17:19:01Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/436</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-436</guid>
   <description>&lt;div&gt;&lt;p&gt;Allow inline function expressions in arrow operator call chains&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;It can be useful to create inline functions for simple operations (e.g. adding 1 to a number) to be used in arrow operator call chains.&lt;/p&gt;
&lt;p&gt;The current proposal uses &lt;code&gt;-&amp;gt; { ... }&lt;/code&gt; for just the thin arrow operator.&lt;/p&gt;
&lt;p&gt;This proposal is split into two parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;restructure the grammar to make the function call usage simpler to follow;&lt;/li&gt;
&lt;li&gt;introduce the ability to use inline functions in thin/fat arrow contexts.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Part 1 -- Simplify the Grammar&lt;/h2&gt;
&lt;p&gt;I suggest changing the grammar to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FatArrowTarget           ::= "=&amp;gt;" ( ArrowFunctionCall | ArrowDynamicFunctionCall )
ThinArrowTarget          ::= "-&amp;gt;" ( ArrowFunctionCall | ArrowDynamicFunctionCall )
ArrowFunctionCall        ::= EQName ArgumentList
ArrowDynamicFunctionCall ::= ( VarRef | ParenthesizedExpr ) PositionalArgumentList
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is, I've grouped the function name/reference with the argument list.&lt;/p&gt;
&lt;h2&gt;Part 2 -- Allow Inline Functions&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;FatArrowTarget          ::= "=&amp;gt;" ( ArrowFunctionCall | ArrowDynamicFunctionCall | ArrowInlineFunctionCall )
ThinArrowTarget         ::= "-&amp;gt;" ( ArrowFunctionCall | ArrowDynamicFunctionCall | ArrowInlineFunctionCall )
ArrowInlineFunctionCall ::= ( "function" | "fun" ) EnclosedExpr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note: here, &lt;code&gt;"fun"&lt;/code&gt; is a placeholder for whichever name/symbol we choose in https://github.com/qt4cg/qtspecs/issues/53.&lt;/p&gt;
&lt;p&gt;This then allows expressions like &lt;code&gt;(1, 2, 3) -&amp;gt; function { . + 1 }&lt;/code&gt; and &lt;code&gt;(1, 2, 3) =&amp;gt; fun { ~ = 1 }&lt;/code&gt; (see also https://github.com/qt4cg/qtspecs/issues/129) without overloading the meaning of &lt;code&gt;-&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
