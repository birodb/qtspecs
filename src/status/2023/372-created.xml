<item>
   <title>Issue #372 created</title>
   <pubDate>2023-02-26T23:06:13Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/372</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-372</guid>
   <description>&lt;div&gt;&lt;p&gt;Separate default namespace for elements from the default namespace for types&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Currently the static context provides a "default namespace for elements and types". It's not at all clear why these should be the same. For types, the vast majority of QNames representing types are in the XML Schema namespace, which is never used for elements.&lt;/p&gt;
&lt;p&gt;In the current 4.0 drafts the two default namespaces are separated; but this has not been reviewed or agreed by the CG. This issue is raised for discussion of the change, and I will also review the design to see whether it still make sense.&lt;/p&gt;
&lt;p&gt;Some observations on the current text for XQuery:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In section 2.2.1 (static context) it would be good to give a bit more detail (if only as a forwards reference) about the circumstances in which the default element namespace and the default type namespace are used.&lt;/li&gt;
&lt;li&gt;In 3.4 Sequence Types the sentence "[Lexical QNames]appearing in a [sequence type] have their prefixes expanded to namespace URIs by means of the [statically known namespaces] and (where applicable) the [default element namespace] or [default type namespace]" is rather inelegantly worded. If there is a prefix, then the statically known namespaces are used; if there is none, then the relevant default namespace is used, and it would be nice to explain more clearly which one applies.&lt;/li&gt;
&lt;li&gt;In 3.6 Item Types, we need to be clearer about references to named/declared item types, and about how the names are resolved. Do we really want these names to be in the same symbol space as atomic types? Perhaps we should have a rule that Item Types (like functions) must be in a namespace and this must not be the same as an imported schema namespace.&lt;/li&gt;
&lt;li&gt;In 5.14, Default namespace declaration, there seems to be duplication between the two paragraphs starting "for backwards compatibility reasons"&lt;/li&gt;
&lt;li&gt;Appendix C.1 (much though I dislike it) should say something about the initialisation of the default namespaces for elements and for types.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note that issue #65 talks of the need for different default namespaces for input and output elements. I think that's a separate issue.&lt;/p&gt;
&lt;p&gt;Observations on the current text for XSLT:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In 5.1.2.1 the paragraph "The [xsl:]xpath-default-namespace attribute must be in the [XSLT namespace] if and only if its parent element is not in the XSLT namespace needs to be generalised to [xsl:]default-element-namespace. In fact, this rule should move to the parent section 5.1.2, which needs an introduction.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
