<item>
   <title>Issue #463 created</title>
   <pubDate>2023-04-28T20:09:30Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/463</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-463</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:parts() - extract the parts of a (not-really) atomic value&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;We have a whole raft of functions to extract the parts of date, time, and duration values: month-from-dateTime(), etc etc.&lt;/p&gt;
&lt;p&gt;These aren't particularly convenient to use, for example getting multiple components of a duration is clumsy; and there are gaps, for example there are no functions to extract the parts of a &lt;code&gt;gMonthDay&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I propose a general-purpose function &lt;code&gt;fn:parts()&lt;/code&gt; which turns any of these composite atomic values into a map, enabling you to replace a call on &lt;code&gt;get-month-from-dateTime($value)&lt;/code&gt; with &lt;code&gt;parts($value)?month&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So far this dupllicates existing functionality perhaps with a bit of added convenience. However, the mechanism is much more extensible and flexible than what we have now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we can apply it to atomic types that currently have no decomposition operators, such as gMonthDay&lt;/li&gt;
&lt;li&gt;we can easily add additional components such as &lt;code&gt;day-of-week&lt;/code&gt; or &lt;code&gt;quarter&lt;/code&gt; or &lt;code&gt;day-of-year&lt;/code&gt; or &lt;code&gt;julian-day&lt;/code&gt; that are currently not available, or only available clumsily using format-dateTime().&lt;/li&gt;
&lt;li&gt;the parts() function is polymorphic, so the same code can be used to get the year (say) from a date, a dateTime, or a gYearMonth.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
