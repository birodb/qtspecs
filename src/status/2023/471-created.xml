<item>
   <title>Issue #471 created</title>
   <pubDate>2023-05-04T13:03:07Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/471</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-471</guid>
   <description>&lt;div&gt;&lt;p&gt;Unify formatting (function calls, code blocks, quotes) in the specification&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Inspired by https://github.com/qt4cg/qtspecs/pull/454#issuecomment-1534633089 ff.&lt;/p&gt;
&lt;p&gt;The syntax of the examples in the XQFO specification is inconsistent. Sometimes, functions in the standard function namespace have an &lt;code&gt;fn&lt;/code&gt; prefix…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fn:fold-right(1 to 5, "", fn:concat(?, ".", ?))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:substring("motor car", 6)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;…sometimes they don’t…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;data(123)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;concat("http://www.example.com/", encode-for-uri("~bébé"))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;…sometimes it’s both:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fn:fold-right(1 to 5, "$zero", concat("$f(", ?, ", ", ?, ")"))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:concat(01, 02, 03, 04, true())&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fn:tokenize(fn:unparsed-text($href), '\r\n|\r|\n')[not(position()=last() and .='')]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Should we drop or keep the prefix – or doesn’t it really matter? If there’s interest, I can create a PR (I’d tend to drop the prefixes).&lt;/p&gt;
&lt;p&gt;In addition, there doesn’t seem to be a consistent rule for representing booleans. We have:&lt;/p&gt;
&lt;p&gt;Syntax | Comment
--- | ---
…returns false | mostly used in the rules (seems appropriate to me)
…returns &lt;code&gt;false&lt;/code&gt; | used in the rules; maybe we should use replace it with the first syntax?
…the result is &lt;code&gt;fn:false()&lt;/code&gt; | used in the rules; maybe we should use replace it with the first syntax?
…returns &lt;code&gt;false()&lt;/code&gt; | mostly used in the examples (seems appropriate to me)&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
