<item>
   <title>Issue #402 created</title>
   <pubDate>2023-03-20T00:31:10Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/402</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-402</guid>
   <description>&lt;div&gt;&lt;p&gt;XSLT patterns: intersect and except&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I would like to propose making an incompatible change to the semantics of XSLT patterns using the "except" and "intersect" operators, so that they have their intuitive meaning.&lt;/p&gt;
&lt;p&gt;Consider the pattern &lt;code&gt;p except appendix//p&lt;/code&gt;. Anyone writing this probably imagines that this will match any &lt;code&gt;p&lt;/code&gt; element that does not have an &lt;code&gt;appendix&lt;/code&gt; as an ancestor. The intuitive meaning of &lt;code&gt;A except B&lt;/code&gt; is to match anything that matches&lt;code&gt;A&lt;/code&gt; unless it also matches &lt;code&gt;B&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The actual meaning in the XSLT 3.1 specification is that it matches any node &lt;code&gt;$N&lt;/code&gt; that has an ancestor &lt;code&gt;$A&lt;/code&gt; such that the result of the XPath expression &lt;code&gt;$A//(p except appendix//p)&lt;/code&gt; includes &lt;code&gt;$N&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Consider the XML&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;appendix&amp;gt;
  &amp;lt;div&amp;gt;
     &amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/appendix&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element here has an ancestor (the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element) where the result of &lt;code&gt;$A//(p except appendix//p)&lt;/code&gt; includes the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element. So despite having an ancestor &lt;code&gt;appendix&lt;/code&gt; this element matches the pattern &lt;code&gt;p except appendix//p&lt;/code&gt;. This is not only a counter-intuitive result, it also makes such patterns useless in practice.&lt;/p&gt;
&lt;p&gt;Patterns using &lt;code&gt;intersect&lt;/code&gt; suffer the same problem, though it is much harder to construct a plausible example.&lt;/p&gt;
&lt;p&gt;Patterns that only use the child or attribute axis, for example &lt;code&gt;@* except @code&lt;/code&gt;, or &lt;code&gt;* except note&lt;/code&gt;, don't suffer from this problem and will retain the same meaning as in 3.1.&lt;/p&gt;
&lt;p&gt;The required effect can be achieved by writing &lt;code&gt;p except p[ancestor::appendix]&lt;/code&gt;. Because the pattern &lt;code&gt;p[ancestor::appendix]&lt;/code&gt; is equivalent to &lt;code&gt;appendix//p&lt;/code&gt;, people are very likely to imagine that &lt;code&gt;p except p[ancestor::appendix]&lt;/code&gt; is equivalent to &lt;code&gt;p except appendix//p&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Making any incompatible change to the language semantics should be done only with a very strong justification, but I believe that it is justified in this instance. The existing semantics are not only counter-intuitive, they are also sufficiently useless that it is extremely unlikely anyone has existing working code, other than artificial test cases, that relies on the current semantics.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
