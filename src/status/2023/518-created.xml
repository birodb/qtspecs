<item>
   <title>Issue #518 created</title>
   <pubDate>2023-05-22T16:45:24Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/518</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-518</guid>
   <description>&lt;div&gt;&lt;p&gt;transitive-closure() function&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I've just found myself writing, yet again, a transitive closure function, and I feel we could add this to the spec.&lt;/p&gt;
&lt;p&gt;I'm afraid it's another case where we really need set operations and therefore a universal equality operator. For the moment I'll just define it over nodes, which shelves the problem.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fn:transitive-closure($start as node()*, $step as function($node as node()) as node()*) as node()*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;returns the set of all nodes reachable from a node in $start by zero or more applications of the $step function, in document order with duplicates removed.&lt;/p&gt;
&lt;p&gt;Can probably define it formally something like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $next-iteration := $start =!&amp;gt; $step()
return if (empty($next-iteration except $start))
           then $start
           else transitive-closure($start | $next-iteration, $step)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
