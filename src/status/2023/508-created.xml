<item>
   <title>Issue #508 created</title>
   <pubDate>2023-05-17T12:53:56Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/508</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-508</guid>
   <description>&lt;div&gt;&lt;p&gt;New Map &amp;amp; Array Functions: Inconsistencies&lt;/p&gt;&lt;div class="markup"&gt;&lt;h3&gt;XQFO 3.1&lt;/h3&gt;
&lt;p&gt;…provides the following functions/constructs for creating and accessing maps &amp;amp; arrays:&lt;/p&gt;
&lt;p&gt;Maps | Singleton Maps
:--- | :---
Decompose | –
Compose | &lt;code&gt;map:merge($maps)&lt;/code&gt;
Create single | &lt;code&gt;map:entry($key, $value)&lt;/code&gt;&lt;br/&gt;&lt;code&gt;map { $key: $value }&lt;/code&gt;
Extract keys | &lt;code&gt;map:keys($map)&lt;/code&gt;
Extract values (flat) | &lt;code&gt;$map?*&lt;/code&gt;
&lt;strong&gt;Arrays&lt;/strong&gt; | &lt;strong&gt;Singleton Arrays&lt;/strong&gt;
Decompose | –
Compose | &lt;code&gt;array:join($arrays)&lt;/code&gt;
Create single | &lt;code&gt;[ $value ]&lt;/code&gt;
Extract values (flat) | –&lt;/p&gt;
&lt;h3&gt;XQFO 4.0 Draft&lt;/h3&gt;
&lt;p&gt;…provides new functions for singletons and map representations:&lt;/p&gt;
&lt;p&gt;Maps | Singleton Maps | Pairs (Key-Value Pair Maps)
:--- | :--- | :---
Decompose | &lt;strong&gt;&lt;code&gt;map:entries($map)&lt;/code&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;code&gt;map:pairs($map)&lt;/code&gt;&lt;/strong&gt;
Compose | &lt;code&gt;map:merge($maps)&lt;/code&gt; | &lt;strong&gt;&lt;code&gt;map:of($pairs)&lt;/code&gt;&lt;/strong&gt;
Create single | &lt;code&gt;map:entry($key, $value)&lt;/code&gt;&lt;br/&gt;&lt;code&gt;map { $key: $value }&lt;/code&gt; | –&lt;br/&gt;&lt;strong&gt;&lt;code&gt;map { 'key': $key, 'value': $value }&lt;/code&gt;&lt;/strong&gt;
Extract keys | &lt;code&gt;map:keys($map)&lt;/code&gt; | &lt;strong&gt;&lt;code&gt;$pairs?key&lt;/code&gt;&lt;/strong&gt;
Extract values (flat) | &lt;strong&gt;&lt;code&gt;map:values($map)&lt;/code&gt;&lt;/strong&gt;&lt;br/&gt;&lt;code&gt;$map?*&lt;/code&gt; | &lt;strong&gt;&lt;code&gt;$pairs?value&lt;/code&gt;&lt;/strong&gt;
&lt;strong&gt;Arrays&lt;/strong&gt; | &lt;strong&gt;Singleton Arrays&lt;/strong&gt; | &lt;strong&gt;Members (Value Maps)&lt;/strong&gt;
Decompose | – | &lt;strong&gt;&lt;code&gt;array:members($array)&lt;/code&gt;&lt;/strong&gt;
Compose | &lt;code&gt;array:join($arrays)&lt;/code&gt; | &lt;strong&gt;&lt;code&gt;array:of($members)&lt;/code&gt;&lt;/strong&gt;
Create single | &lt;code&gt;[ $value ]&lt;/code&gt; | &lt;strong&gt;&lt;code&gt;array { 'value': $value }&lt;/code&gt;&lt;/strong&gt;
Extract values (flat) | &lt;strong&gt;&lt;code&gt;array:values($array)&lt;/code&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;code&gt;$members?value&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following terminology can be derived from the function names:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A key-value pair map with a single map pair is called a &lt;strong&gt;Pair&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A value map with a single array member is called a &lt;strong&gt;Member&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;A singleton map is called an &lt;strong&gt;Entry&lt;/strong&gt; (due to &lt;code&gt;map:entry&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;We have no name for a singleton array.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Complete the Picture&lt;/h3&gt;
&lt;p&gt;I believe we should:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;rename &lt;code&gt;map:of&lt;/code&gt; to &lt;code&gt;map:of-pairs&lt;/code&gt; or &lt;code&gt;map:merge-pairs&lt;/code&gt; (as a hint that singletons are not the expected input)&lt;/li&gt;
&lt;li&gt;rename &lt;code&gt;array:of&lt;/code&gt; to &lt;code&gt;array:of-members&lt;/code&gt; or &lt;code&gt;array:join-members&lt;/code&gt; (as a hint…)&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;map:pair&lt;/code&gt; for creating a single pair&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;array:split&lt;/code&gt; (&lt;code&gt;array:tokenize&lt;/code&gt;, …?) for decomposing arrays to singleton arrays&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I’m not sure if we should add array functions for creating singletons or value maps; we also have &lt;code&gt;array:build&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
