<item>
   <title>Issue #321 created</title>
   <pubDate>2023-01-26T04:12:06Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/321</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-321</guid>
   <description>&lt;div&gt;&lt;p&gt;relax $input in fn:serialize&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Relevant specifications:
https://qt4cg.org/specifications/xpath-functions-40/Overview-diff.html#func-serialize&lt;/p&gt;
&lt;p&gt;Would it be possible to relax the strictures on &lt;code&gt;$input&lt;/code&gt; (first parameter) of &lt;code&gt;fn:serialize()&lt;/code&gt;?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The specifications do not explicitly forbid &lt;code&gt;map(*)&lt;/code&gt; or &lt;code&gt;array(*)&lt;/code&gt; as input, but in practice, when these are supplied, Saxon rejects them. Developers (or at least this one) who work with arrays and maps often need to render them in string output or messages, if only for diagnostics. If there is something really prohibitively wrong with those two items as input to &lt;code&gt;fn:serialize()&lt;/code&gt;, then the specifications should say so.&lt;/li&gt;
&lt;li&gt;Attributes are forbidden, but it is unclear why. They get serialized fine in the context of a parent, why not alone?&lt;/li&gt;
&lt;li&gt;Namespace nodes are forbidden; see previous point.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(No doubt there must have been discussion on points 2-3, but the rationale is not clear from the specs.)&lt;/p&gt;
&lt;p&gt;Perhaps the question is that the details of what the serialization should look like is contestable. I think the answer there is simply, pick one. I think we'll happily live with whatever is chosen.&lt;/p&gt;
&lt;p&gt;For the serialization of maps and arrays, I'll point as one possible model my &lt;a href="https://github.com/textalign/TAN-2021/blob/9d2215e36da1f64bddad9daddfc5aa2242e17c81/functions/maps/TAN-fn-maps-extended.xsl#L58"&gt;tan:map-to-xml()&lt;/a&gt; and &lt;a href="https://github.com/textalign/TAN-2021/blob/9d2215e36da1f64bddad9daddfc5aa2242e17c81/functions/arrays/TAN-fn-arrays-extended.xsl#L66"&gt;tan:array-to-xml()&lt;/a&gt;, which have been indispensable for daily troubleshooting.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
