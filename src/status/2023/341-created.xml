<item>
   <title>Issue #341 created</title>
   <pubDate>2023-02-08T01:50:08Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/341</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-341</guid>
   <description>&lt;div&gt;&lt;p&gt;[XPath] Error-free selection operator for maps or arrays, or finite-domain functions&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In March 2021 Jarno Elovirta raised on the &lt;strong&gt;&lt;em&gt;#general channel&lt;/em&gt;&lt;/strong&gt; of the XML.com Slack the problem that the existing map or array lookup operator "&lt;strong&gt;?&lt;/strong&gt;" prevents a free traversal of a nested mapp/array object. For example, this expression results in error:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xq"&gt;[
  map {"k0": 1}, 
  map{"k0": [1, 2, 3]}
]  ?* ?("k0")  ?*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;[XPTY0004] Input of lookup operator must be map or array: 1.&lt;/strong&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;There are three possible types of reaction to this problem:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Do nothing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Relax the semantics of the map/array lookup operator "&lt;strong&gt;?&lt;/strong&gt;" so that it can be applied on items of non-map/non-array type and in such case produce the empty sequence.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Introduce a similar operator to "&lt;strong&gt;?&lt;/strong&gt;" that will behave as it, but instead of producing an error when applied on items of non-map/non-array type it produces the empty sequence.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Obviously, we are not advocating the 1st choice above, or otherwise we wouldn't be raising any issue ðŸ˜„&lt;/p&gt;
&lt;p&gt;Choice 2 could be implemented, but this would have a few drawbacks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it would bring a certain degree of backwards incompatibility&lt;/li&gt;
&lt;li&gt;"silently returning nothing" is really difficult to debug or even notice unexpected results, as pointed out by @michaelhkay&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;This proposal is to choose alternative 3. above&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Why is it better than the 2nd one?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No incompatibility can be introduced, as this is a new operator.&lt;/li&gt;
&lt;li&gt;The user has intentionally chosen this operator over the "?" operator, and this means that the user is well aware of the new, sometimes tricky to observe/explain/debug behavior, but the user doesn't mind these effects and is ready to deal with them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Definition&lt;/h2&gt;
&lt;p&gt;By definition the operator &lt;strong&gt;"-&amp;gt;"&lt;/strong&gt; with left-hand-side any expression &lt;strong&gt;&lt;em&gt;E&lt;/em&gt;&lt;/strong&gt; and right-hand-side a literal string  &lt;strong&gt;&lt;em&gt;X&lt;/em&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Â Â Â &lt;strong&gt;&lt;code&gt;E -&amp;gt; X&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;is lexically expanded to:&lt;/p&gt;
&lt;p&gt;Â Â Â &lt;strong&gt;&lt;code&gt;E[. instance of map(*) or . instance of array(*)]?X &lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;With the original expression provided by Jarno Elovirta, but now using the &lt;strong&gt;"-&amp;gt;"&lt;/strong&gt; operator:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xq"&gt;[
  map {"k0": 1}, 
  map{"k0": [1, 2, 3]}
]  -&amp;gt;* -&amp;gt;("k0")  -&amp;gt;*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;its evaluation produces the expected result (all the values within just one of the leaves of the tree), and no error:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;1, 2, 3&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That is, &lt;strong&gt;&lt;code&gt;1 -&amp;gt;*&lt;/code&gt;&lt;/strong&gt;  produces the empty sequence and no error.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Of course, the above example can be rewritten to this equivalent XPath 3.0 expression and will get the wanted result, but literally no one, myself included, will ever write this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xq"&gt;[
 map {"k0": 1}, 
 map{"k0": [1, 2, 3]}
] [. instance of map(*) or . instance of array(*)]      ?*
           [. instance of map(*) or . instance of array(*)]      ?k0
                                [. instance of map(*) or . instance of array(*)]   ?*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/10605892/217432167-5f7fbff0-3d8d-48a3-a27d-5f62cb77c3dc.png" alt="image"/&gt;&lt;/p&gt;
&lt;h2&gt;Thus &lt;strong&gt;&lt;em&gt;&lt;code&gt;this is all about making it possible/feasible and empowering our users!&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/h2&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
