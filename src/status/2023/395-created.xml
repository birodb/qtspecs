<item>
   <title>Pull request #395 created</title>
   <pubDate>2023-03-13T11:50:35Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/pull/395</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-395</guid>
   <description>&lt;div&gt;&lt;p&gt;Make the (non-)hierarchical nature of URIs explicit&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The &lt;code&gt;fn:parse-uri&lt;/code&gt; function will parse hierarchical or non-hierarchical URIs, however, the parse cannot be reversed if the &lt;code&gt;fn:build-uri&lt;/code&gt; function doesn't know whether the scheme is hierarchical. Consider &lt;code&gt;fn:parse-uri("querty:abc")&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map {
  "path":"abc",
  "scheme":"querty",
  "path-segments":["abc"],
  "uri":"querty:abc"
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When &lt;code&gt;fn:build-uri&lt;/code&gt; parses that map, it produces: &lt;code&gt;querty://abc&lt;/code&gt; because the scheme is not known to be non-hierarchical.&lt;/p&gt;
&lt;p&gt;This PR changes &lt;code&gt;fn:parse-uri&lt;/code&gt; so that it records whether or not the URI was hierarchical and &lt;code&gt;fn:build-uri&lt;/code&gt; to use that information.&lt;/p&gt;
&lt;p&gt;It's possible that we could finesse this by setting the &lt;code&gt;authority&lt;/code&gt; to the empty string for hierarchical URIs, but it seems clearer to be explicit.&lt;/p&gt;
&lt;p&gt;This PR also fixes a bug. Previously, if the &lt;code&gt;scheme&lt;/code&gt; was not present when building a URI, the URI began with &lt;code&gt;//&lt;/code&gt;. That's an error. If the scheme isn't present, there should be no &lt;em&gt;scheme separator&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
