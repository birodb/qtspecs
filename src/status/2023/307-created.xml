<item>
   <title>Issue #307 created</title>
   <pubDate>2023-01-15T15:42:30Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/307</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-307</guid>
   <description>&lt;div&gt;&lt;p&gt;Parsing and building URIs comments and queries&lt;/p&gt;&lt;div class="markup"&gt;&lt;ol&gt;
&lt;li&gt;fn:build-uri states:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;If the scheme key is present in the map, the URI begins with the value of that key concatenated with //, otherwise it begins //.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;a. Shouldn't the concatenation be &lt;code&gt;://&lt;/code&gt; so e.g. &lt;code&gt;http&lt;/code&gt; becomes &lt;code&gt;http://&lt;/code&gt;?
b. How are non-heirarchical schemes handled like &lt;code&gt;urn&lt;/code&gt;, and &lt;code&gt;mailto&lt;/code&gt;?&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;RFC 3986 allows IPv6 and IPvFuture addresses that contain &lt;code&gt;:&lt;/code&gt; characters, e.g. &lt;code&gt;http://[::1]:80&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My understanding of fn:parse-uri is that this will fail to parse.&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;RFC 3986 states that for userinfo, the &lt;code&gt;user:password&lt;/code&gt; form is deprecated.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Browsers will reject this due to the security risk, and the RFC suggests that applications should not render the password (the part after the &lt;code&gt;:&lt;/code&gt;) in clear text. -- Should fn:build-uri follow suite, or (along with fn:parse-uri) have an option to control the behaviour (keep, remove, invalid), where if the option is invalid, it will throw an fn:error?&lt;/p&gt;
&lt;ol start="4"&gt;
&lt;li&gt;RFC 3986 suggests that the port should be omitted if it matches the default for the scheme&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Should fn:build-uri have this behaviour?&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
