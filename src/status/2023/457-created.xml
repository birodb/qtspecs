<item>
   <title>Issue #457 created</title>
   <pubDate>2023-04-26T06:32:41Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/457</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-457</guid>
   <description>&lt;div&gt;&lt;p&gt;Support parsing numeric, alphabetic, and additive number systems.&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;This proposal is based on the work done in https://www.w3.org/TR/css-counter-styles-3/ when defining CSS rules for formatting the numbers in list items.&lt;/p&gt;
&lt;p&gt;The idea is to define 3 parsing strategies:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;numeric&lt;/code&gt; -- number-like systems such as decimal;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alphabetic&lt;/code&gt; -- alphabetical-like systems such as spreadsheet columns (A, B, ..., Z, AA, AB, ...)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;additive&lt;/code&gt; -- systems like roman and hebrew where the symbol represents a fixed value that is added together&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Parsing these, we have 3 properties:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;system as enum("numeric", "alphabetic", "additive") := "numeric"&lt;/code&gt; -- which of the parsing strategies (number systems) to use;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;symbols as xs:string := "0123456789"&lt;/code&gt; -- the list of characters used to represent a digit;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;additive-symbols as map(xs:integer, xs:string) := map {}&lt;/code&gt; -- a map of the symbols in an additive system with the corresponding value of that symbol.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Consideration 1 -- Should these also allow any whitespace and optional "+"/"-" symbols like the radix-based parse-integer?&lt;/p&gt;
&lt;p&gt;Consideration 2 -- Should we define decimal format options for these, so the decimal format name can format/represent other number systems (binary, hex, hebrew, tamil, roman numerals, etc.). -- Note: this would make &lt;code&gt;system&lt;/code&gt;, &lt;code&gt;symbols&lt;/code&gt;, and &lt;code&gt;additive-symbols&lt;/code&gt; properties of the decimal format object with the above defaults. The formatting would work in the same way as it is defined in the CSS Counter Styles specification.&lt;/p&gt;
&lt;h2&gt;Design 1 -- Separate functions&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;fn:parse-numeric-integer($value as xs:string,
                         $symbols as xs:string := "0123456789") as xs:integer

fn:parse-alphabetic-integer($value as xs:string,
                            $symbols as xs:string := "ABCDEFGHIJKLMNOPQRSTUVWXYZ") as xs:integer

fn:parse-additive-integer($value as xs:string,
                          $additive-symbols as map(xs:integer, xs:string)) as xs:integer
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Design 2 -- Combined functions&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;fn:parse-integer($value as xs:string,
                 $system as xs:string := "numeric",
                 $symbols as xs:string := "0123456789",
                 $additive-symbols as map(xs:integer, xs:string) := map {}) as xs:integer

fn:parse-integer($value as xs:string,
                 $radix as xs:integer) as xs:integer
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
