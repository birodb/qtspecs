<item>
   <title>Issue #435 created</title>
   <pubDate>2023-04-11T16:33:00Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/435</link>
   <guid>https://qt4cg.org/@qt4cg/2023/#created-435</guid>
   <description>&lt;div&gt;&lt;p&gt;Remove the inlined function expression variant of the thin arrow operator&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;This proposal is to remove the third bullet/variant from the thin arrow operator so that the new inline function syntax (&lt;code&gt;-&amp;gt; { ... }&lt;/code&gt;) cannot be used within the arrow expressions.&lt;/p&gt;
&lt;p&gt;This makes the thin/fat arrows consistent in behaviour with each other, with the exception of how they pass the value to the expressions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;thin arrow operators pass the values in the sequence one at a time to the associated function;&lt;/li&gt;
&lt;li&gt;fat arrow operators pass all the values in the sequence to the associated function in a single call.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Changes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Update the syntax:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;[46] FatArrowTarget  ::= "=&amp;gt;" ((ArrowStaticFunction ArgumentList) | (ArrowDynamicFunction PositionalArgumentList)) 	
[47] ThinArrowTarget ::= "-&amp;gt;" ((ArrowStaticFunction ArgumentList) | (ArrowDynamicFunction PositionalArgumentList))
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Remove the text for the inline function variant:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;If the arrow is followed by an &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#doc-xpath40-EnclosedExpr"&gt;EnclosedExpr&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;Given a &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#doc-xpath40-UnaryExpr"&gt;UnaryExpr&lt;/a&gt; U, and an &lt;a href="https://qt4cg.org/specifications/xquery-40/xpath-40.html#doc-xpath40-EnclosedExpr"&gt;EnclosedExpr&lt;/a&gt; {E}, the expression U -&amp;gt; {E} is equivalent to the expression (U) ! (E).&lt;/p&gt;
&lt;p&gt;For example, the expression $x -&amp;gt; {.+1} is equivalent to ($x)!(.+1).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Remove/update the associated examples, e.g. to use &lt;code&gt;let $f := function ($x) { $x + 1 } return $x -&amp;gt; f() -&amp;gt; $f()&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
