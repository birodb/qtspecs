<item>
   <title>Issue #22 created</title>
   <pubDate>2020-12-17T00:01:41Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/22</link>
   <guid>https://qt4cg.org/@qt4cg/2020/#created-22</guid>
   <description>&lt;div&gt;&lt;p&gt;[XPath] Allowing multiple let clauses in LetExpr and for clauses in ForExpr&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Currently, it is possible to have multiple &lt;code&gt;SimpleLetBinding&lt;/code&gt;s in a &lt;code&gt;SimpleLetClause&lt;/code&gt;, but not have multiple &lt;code&gt;SimpleLetClause&lt;/code&gt;s in a &lt;code&gt;LetExpr&lt;/code&gt;. The same applies for &lt;code&gt;ForExpr&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I propose that this should be possible. In other words, make the following changes to the XPath 4.0 grammar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[12] ForExpr ::= SimpleForClause SimpleForClause* "return" ExprSingle
[15] LetExpr ::= SimpleLetClause SimpleLetClause* "return" ExprSingle
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This way, a user can write the following in XPath 4.0:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $x := 1.0
let $y := 2.0
return $x + $y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in addition to the following in XPath 3.1 and earlier:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $x := 1.0, $y := 2.0
return $x + $y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that this does not add any new capability to XPath (in particular, for and let clauses cannot be mixed like in XQuery) as a user can define multiple let or for clauses, it just provides them with an alternative way of expressing that like they can do in XQuery (where it is common to use a series of let clauses instead of let bindings for multiple local variables).&lt;/p&gt;
&lt;p&gt;Kind regards,
Reece&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
