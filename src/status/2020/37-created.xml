<item>
   <title>Issue #37 created</title>
   <pubDate>2020-12-21T12:03:40Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/37</link>
   <guid>https://qt4cg.org/@qt4cg/2020/#created-37</guid>
   <description>&lt;div&gt;&lt;p&gt;[XPath] [XQuery] Support sequence, array, and map destructuring declarations&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Given a function that returns a sequence, array, or map of a fixed length or structure, it would be useful to extract those values in a destructuring declaration like can be done in other languages (such as JavaScript, Kotlin, C++, and Python). For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $(sin, cos) := sincos(math:pi()) (: sequence :)
let $[x, y, z] := camera-angle() (: array :)
let ${r, i} := complex(1, 2) (: map :)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These would be equivalent to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $ret := sincos(math:pi()), $sin := $ret[1], $cos := $ret[2] (: sequence :)
let $ret := camera-angle(), $x := $ret?(1), $y := $ret?(2), $z := $ret?(3) (: array :)
let $ret := complex(1 ,2), $r := $ret?r, $i := $ret?i (: map :)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It should be possible to define the type of a component and/or the whole construct:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $(sin as xs:float, cos) as xs:float* := sincos(math:pi()) (: sequence :)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For maps, it would also be useful to rename the components, such as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let ${re := r, im as xs:double := i} := complex(1, 2) (: map :)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It should also be possible to capture any left-over items in the sequence/array/map, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $(headings, rows) := load-csv("test.csv")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A destructuring declaration should be usable anywhere a variable binding can be defined.&lt;/p&gt;
&lt;p&gt;It should not be an error to use the same variable name twice. This supports conventions such as using &lt;code&gt;_&lt;/code&gt; for unused values. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $[_, y, _] := camera-angle()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
