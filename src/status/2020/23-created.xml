<item>
   <title>Issue #23 created</title>
   <pubDate>2020-12-17T00:04:26Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/23</link>
   <guid>https://qt4cg.org/@qt4cg/2020/#created-23</guid>
   <description>&lt;div&gt;&lt;p&gt;[XPath] [XQuery] Extending element and attribute tests to NameTest unions&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In the XPath and XQuery drafts the element and attribute tests have been extended to support any NameTest, meaning they now support all wildcard forms, which is great.&lt;/p&gt;
&lt;p&gt;It is possible to write a path expression that takes a union of different paths -- such as &lt;code&gt;html//(ol|ul)&lt;/code&gt; -- however it is not possible to define a precise type that accepts that path expression in variables, parameters, or return types, so if a user does specify a type some type information is lost during the static analysis phase.&lt;/p&gt;
&lt;p&gt;As such, I propose renaming &lt;code&gt;CatchErrorList&lt;/code&gt; to &lt;code&gt;NameTestUnion&lt;/code&gt; and making &lt;code&gt;ElementTest&lt;/code&gt; and &lt;code&gt;AttributeTest&lt;/code&gt; accept a &lt;code&gt;NameTestUnion&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[86] CatchClause ::= "catch" NameTestUnion EnclosedExpr
[87] NameTestUnion ::= NameTest ("|" NameTest)*
[212] AttributeTest ::= "attribute" "(" (NameTestUnion ("," TypeName)?)? ")"
[215] ElementTest ::= "element" "(" (NameTestUnion ("," TypeName "?"?)?)? ")"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kind regards,
Reece&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
