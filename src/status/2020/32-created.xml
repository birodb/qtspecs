<item>
   <title>Issue #32 created</title>
   <pubDate>2020-12-18T16:28:07Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/32</link>
   <guid>https://qt4cg.org/@qt4cg/2020/#created-32</guid>
   <description>&lt;div&gt;&lt;p&gt;[XQuery] try/catch: New variable for all error information&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Within the scope of a catch clause, some variables are implicitly declared. However, itâ€™s more than tedious to forward all this information to another function:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;try {
  'oh' + 'dear'
} catch * {
  handle-error($err:code, $err:description, $err:line-number, $err:column-number, ...)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What about binding all data to an additional &lt;code&gt;$err:map&lt;/code&gt; variable?&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;map {
  'code': $err:code,
  'value': $err:value,
  'description': $err:description,
  'line-number': $err:line-number,
  'column-number': $err:column-number,
  'additional': $err:additional
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The code could then be shortened to:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;try {
  'oh' + 'yes'
} catch * {
  handle-error($err:map)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
